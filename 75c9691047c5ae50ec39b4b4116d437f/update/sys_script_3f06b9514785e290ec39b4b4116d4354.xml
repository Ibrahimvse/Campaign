<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1682057_my_cam_0_candidate_user_asignment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Assign App Role to User on Assignment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions>x_1682057_my_cam_0.admin</role_conditions>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    if (!current.user || !current.role_type || current.status != true) return;

    var roleMap = {
        'system': 'x_1682057_my_cam_0.admin',
        'list': 'x_1682057_my_cam_0.menu',
        'candidate': 'x_1682057_my_cam_0.user'
    };
    var roleName = roleMap[current.role_type + ''];
    if (!roleName) return;

    // Step 1: If role_type changed, remove old role
    if (previous && previous.role_type != current.role_type) {
        var oldRoleName = roleMap[previous.role_type + ''];
        if (oldRoleName) {
            var oldRole = new GlideRecord('sys_user_role');
            if (oldRole.get('name', oldRoleName)) {
                var oldUR = new GlideRecord('sys_user_has_role');
                oldUR.addQuery('user', current.user);
                oldUR.addQuery('role', oldRole.sys_id);
                oldUR.query();
                while (oldUR.next()) {
                    oldUR.deleteRecord();
                }
            }
        }
    }


    // Check if user already has role
    var ur = new GlideRecord('sys_user_has_role');
    ur.addQuery('user', current.user);
    ur.addQuery('role.name', roleName);
    ur.query();
    if (!ur.hasNext()) {
        // Assign role
        var roleGr = new GlideRecord('sys_user_role');
        if (roleGr.get('name', roleName)) {
            var newUr = new GlideRecord('sys_user_has_role');
            newUr.initialize();
            newUr.user = current.user;
            newUr.role = roleGr.sys_id;
            newUr.insert();
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-20 19:49:27</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3f06b9514785e290ec39b4b4116d4354</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Assign App Role to User on Assignment</sys_name>
        <sys_overrides/>
        <sys_package display_value="My Campaign " source="x_1682057_my_cam_0">75c9691047c5ae50ec39b4b4116d437f</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Campaign ">75c9691047c5ae50ec39b4b4116d437f</sys_scope>
        <sys_update_name>sys_script_3f06b9514785e290ec39b4b4116d4354</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-20 21:32:12</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3f06b9514785e290ec39b4b4116d4354"/>
</record_update>
